#!/usr/bin/env php
<?php
/**
 * This file is part of friendsofhyperf/components.
 *
 * @link     https://github.com/friendsofhyperf/components
 * @document https://github.com/friendsofhyperf/components/blob/3.x/README.md
 * @contact  huangdijia@gmail.com
 */
use PhpParser\Node;
use PhpParser\NodeTraverser;
use PhpParser\NodeVisitorAbstract;
use PhpParser\Parser;
use PhpParser\ParserFactory;
use PhpParser\PrettyPrinter\Standard;

require_once 'vendor/autoload.php';

class RunInCoroutineVisitor extends NodeVisitorAbstract
{
    /**
     * @var Parser
     */
    protected $parser;

    public function __construct(Parser $parser)
    {
        $this->parser = $parser;
    }

    public function afterTraverse(array $nodes)
    {
        /** @var Node\Stmt\Expression $main */
        $main = array_pop($nodes);
        $main = $main->expr;
        foreach ($this->wrapCoroutine($main) as $node) {
            $nodes[] = $node;
        }
        return $nodes;
    }

    protected function wrapCoroutine($expr): array
    {
        /** @var PhpParser\Node\Stmt\Expression[] $nodes */
        $nodes = $this->parser->parse('<?php
$code = 0;
Swoole\Coroutine::set(["hook_flags" => SWOOLE_HOOK_ALL, "exit_condition" => function () {
    return Swoole\Coroutine::stats()["coroutine_num"] === 0;
}]);
Swoole\Coroutine\run(function () use(&$code) {
    try {
    } catch (Swoole\ExitException $e) {
        $code = $e->getStatus();
    }
    Swoole\Timer::clearAll();
    Hyperf\Coordinator\CoordinatorManager::until(Hyperf\Coordinator\Constants::WORKER_EXIT)->resume();
});
die($code);
');
        $nodes[2]->expr->args[0]->value->stmts[0]->stmts[0] = new Node\Stmt\Expression(new Node\Expr\Assign(
            new Node\Expr\Variable('code'),
            $expr
        ));
        return $nodes;
    }
}

$parser = (new ParserFactory())->create(ParserFactory::ONLY_PHP7);
$printer = new Standard();
$traverser = new NodeTraverser();

$code = file_get_contents(__DIR__ . '/../vendor/pestphp/pest/bin/pest');

$stmts = $parser->parse($code);
$traverser->addVisitor(new RunInCoroutineVisitor($parser));
$stmts = $traverser->traverse($stmts);

$code = $printer->prettyPrint($stmts);

// TODO: Unknown reason
$code = ltrim($code, '?>' . PHP_EOL);

file_put_contents($coPest = __DIR__ . '/co-pest', $code);
chmod($coPest, 0755);
